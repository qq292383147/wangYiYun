{"version":3,"sources":["webpack:///src/base/albumPage/index.vue","webpack:///./src/base/albumPage/index.vue?3bb3","webpack:///./src/base/albumPage/index.vue","webpack:///src/base/songListPage/index.vue","webpack:///./src/base/songListPage/index.vue?3274","webpack:///./src/base/songListPage/index.vue"],"names":["albumPage","name","data","albumInfo","load","listId","components","songListPage","songList","song","created","activated","this","albumId","$route","params","idxId","dishId","console","log","_getInfo","_getIdxInfo","_getDishInfo","Number","$router","go","computed","extends_default","Object","vuex_esm","audioSong","methods","id","_this","api","albumDetailFn","then","res","code","playlist","catch","error","_this2","idxListFn","_this3","getDishInfoFn","setAudioList","item","index","selectPlay","list","tracks","startPlay","startPlayAll","destroyed","base_albumPage","render","_vm","_h","$createElement","_c","_self","attrs","title","imgUrl","coverImgUrl","album","picUrl","albumTitle","creatorImgUrl","creator","avatarUrl","artist","author","nickname","description","commentCount","info","shareCount","trackCount","size","subscribedCount","subscribed","isSubIn","playCount","on","_l","songs","key","songName","artists","ar","albumName","al","num","nowSong","beginSong","$event","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","setNum","val","toFixed","globalNav","generalNav","pageLoading","iTitle","iAlbumTitle","listFixed","top","isSubInItem","subscribedCountItem","watch","$refs","collection","style","display","props","type","height","String","default","Boolean","isAlbum","filters","setCom","setShare","setCol","setPlay","day","Date","getDate","month","getMonth","addPlaylist","addOrDeletePlaylistFn","deletePlaylist","beginAudio","$emit","returnPage","scrollList","e","$el","scrollTop","base_songListPage","staticClass","scroll","_e","directives","rawName","value","expression","_v","_s","alt","_f","_m","class","click","ref","bg","marginTop","_t"],"mappings":"iLA8CAA,GACAC,KAAA,GACAC,KAFA,WAGA,OAEAC,aAEAC,MAAA,EACAC,OAAA,IAGAC,YACAC,eAAA,EACAC,SAAAC,EAAA,GAKAC,QAlBA,aAuBAC,UAvBA,WAwBAC,KAAAR,MAAA,EACA,IAAAS,EAAAD,KAAAE,OAAAC,OAAAF,QACAG,EAAAJ,KAAAE,OAAAC,OAAAC,MACAC,EAAAL,KAAAE,OAAAC,OAAAE,OACAC,QAAAC,IAAAP,KAAAE,OAAAC,QACAH,KAAAP,QAAAQ,EACAA,EACAD,KAAAQ,SAAAP,GAGAG,EACAJ,KAAAS,YAAAL,GAGAC,EACAL,KAAAU,aAAAL,GAIA,IAAAM,OAAAV,KACAU,OAAAV,IACAD,KAAAY,QAAAC,IAAA,KAIAC,SAAYC,OACZC,OAAAC,EAAA,EAAAD,EAAAE,UAAA,oBAEAC,QAAWJ,KAMXP,SANA,SAMAY,GAAA,IAAAC,EAAArB,KAEMsB,EAAA,EAANC,cAAAH,GAEAI,KAAA,SAAAC,GAEA,IAAAnC,EAAAmC,EAAAnC,KAEA,MAAAA,EAAAoC,OAEAL,EAAA9B,UAAAD,EAAAqC,SACAN,EAAA7B,MAAA,KAGAoC,MAAA,SAAAC,GACAvB,QAAAC,IAAAsB,MAMApB,YA3BA,SA2BAW,GAAA,IAAAU,EAAA9B,KACMsB,EAAA,EAANS,UAAAX,GACAI,KAAA,SAAAC,GACA,IAAAnC,EAAAmC,EAAAnC,KACA,MAAAA,EAAAoC,OACAI,EAAAvC,UAAAD,EAAAqC,SACAG,EAAAtC,MAAA,MAOAkB,aAxCA,SAwCAU,GAAA,IAAAY,EAAAhC,KACMsB,EAAA,EAANW,cAAAb,GACAI,KAAA,SAAAC,GACA,IAAAnC,EAAAmC,EAAAnC,KACA,MAAAA,EAAAoC,OACAM,EAAAzC,UAAAD,EACA0C,EAAAxC,MAAA,MAIA0C,aAlDA,SAkDAC,EAAAC,GACA9B,QAAAC,IAAA,MAAA4B,GACAnC,KAAAqC,YACAC,KAAAtC,KAAAT,UAAAgD,OACAH,WAGAI,UAzDA,WA0DAxC,KAAAyC,cACAH,KAAAtC,KAAAT,UAAAgD,WAGAvB,OAAAC,EAAA,EAAAD,EAAA,+BAEA0B,UApHA,WAsHA1C,KAAAT,aAEAS,KAAAR,MAAA,ICnKemD,GADEC,OAFjB,WAA0B,IAAAC,EAAA7C,KAAa8C,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,kBAA4BE,OAAOC,MAAA,KAAA3D,KAAAqD,EAAArD,KAAA4D,OAAAP,EAAAtD,UAAA8D,YAAAR,EAAAtD,UAAA8D,YAAAR,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAC,OAAA,GAAAC,WAAAX,EAAAtD,UAAAF,KAAAwD,EAAAtD,UAAAF,KAAAwD,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAjE,KAAA,GAAAI,OAAAoD,EAAApD,OAAAgE,cAAAZ,EAAAtD,UAAAmE,QAAAb,EAAAtD,UAAAmE,QAAAC,UAAAd,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAM,OAAAL,OAAA,GAAAM,OAAAhB,EAAAtD,UAAAmE,QAAAb,EAAAtD,UAAAmE,QAAAI,SAAAjB,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAM,OAAAvE,KAAA,GAAA0E,YAAAlB,EAAAtD,UAAAwE,YAAAlB,EAAAtD,UAAAwE,YAAAlB,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAS,YAAA,GAAAC,aAAAnB,EAAAtD,UAAAyE,aAAAnB,EAAAtD,UAAAyE,aAAAnB,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAW,KAAAD,aAAA,EAAAE,WAAArB,EAAAtD,UAAA2E,WAAArB,EAAAtD,UAAA2E,WAAArB,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAW,KAAAC,WAAA,EAAAC,WAAAtB,EAAAtD,UAAA4E,WAAAtB,EAAAtD,UAAA4E,WAAAtB,EAAAtD,UAAA+D,MAAAT,EAAAtD,UAAA+D,MAAAc,KAAA,EAAAC,gBAAAxB,EAAAtD,UAAA8E,gBAAAC,WAAAzB,EAAAtD,UAAA+E,WAAAC,QAAA1B,EAAAtD,UAAA+E,WAAAE,UAAA3B,EAAAtD,UAAAiF,WAAmrCC,IAAKhC,aAAAI,EAAAL,YAA8BK,EAAA6B,GAAA7B,EAAAtD,UAAAgD,QAAAM,EAAAtD,UAAAoF,MAAA,SAAAxC,EAAAC,GAA2E,OAAAY,EAAA,aAAuB4B,IAAAxC,EAAAc,OAAiB2B,SAAA1C,EAAA9C,KAAAyF,QAAA3C,EAAA4C,GAAAC,UAAA7C,EAAA8C,GAAA5F,KAAA6F,IAAA9C,EAAA,EAAA+C,QAAAhD,EAAAf,KAAAyB,EAAA3B,UAAAE,IAAuHqD,IAAKW,UAAA,SAAAC,GAA6B,OAAAxC,EAAAX,aAAAC,EAAAC,SAAyC,IAEtnDkD,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACErG,EACAuD,GATF,EAVA,SAAA+C,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB,6HC6FhCK,EAAA,SAAAC,GACA,OAAAA,GAGAA,EAAA,IACAA,KAAA,KAAAC,QAAA,OACAD,EAAA,MACAA,KAAA,KAAAC,QAAA,QAEAD,GAPA,IAUAlG,GACAN,KAAA,GACAK,YACAqG,UAAAC,EAAA,EACAC,cAAA,GAKA3G,KATA,WAUA,OACA4G,OAAAlG,KAAAmD,MACAgD,YAAAnG,KAAAwD,WACA4C,WAAA,EACAC,IAAA,SACAC,aAAA,EACAC,oBAAA,IAQAC,OACArD,MAAA,SAAA0C,GACA7F,KAAAkG,OAAAL,GAEArC,WAAA,SAAAqC,GACA7F,KAAAmG,YAAAN,GAEAxB,gBAAA,SAAAwB,GACA7F,KAAAuG,oBAAAV,EAIA7F,KAAAyG,MAAAC,WAAAC,MAAAC,QAHA,IAAAf,KAGA,GAFA,QAKAtB,QAAA,SAAAsB,GACA7F,KAAAsG,YAAAT,IAMAgB,OACApH,QACAqH,KAAAnG,QAEA6D,WACAsC,KAAAnG,QAEAoG,QAEAD,KAAAE,OACAC,QAAA,QAEA5C,iBACAyC,KAAAnG,QAEA2D,YACAwC,KAAAI,SAEA/C,YACA2C,KAAAnG,QAEAuD,YACA4C,KAAAnG,QAEAqD,cACA8C,KAAAnG,QAEAoD,aACA+C,KAAAE,QAEAnD,QACAiD,KAAAE,QAEAvD,eACAqD,KAAAE,QAEAxD,YACAsD,KAAAE,QAEA5D,QACA0D,KAAAE,QAEA7D,OACA2D,KAAAE,QAEAG,SACAL,KAAAI,QACAD,SAAA,GAEAzH,MACAsH,KAAAI,QACAD,SAAA,GAEA1C,SACAuC,KAAAI,QACAD,SAAA,IAGAG,SACAC,OAAA,SAAAxB,GACA,OAAAA,EAGAD,EAAAC,GAFA,MAIAyB,SAAA,SAAAzB,GACA,OAAAA,EAGAD,EAAAC,GAFA,MAIA0B,OAAA,SAAA1B,GACA,OAAAA,EAGAD,EAAAC,GAFA,IAIA2B,QAAA,SAAA3B,GACA,OAAAA,EAGAD,EAAAC,GAFA,KAMA/E,UAIA2G,IAAA,WACA,IAAAA,GAAA,IAAAC,MAAAC,UAAA,GACA,SAAAD,MAAAC,WACA,IAAAD,MAAAC,UACA,OAAAF,GAKAG,MAAA,WACA,IAAAA,GAAA,IAAAF,MAAAG,WAAA,KACA,UAAAH,MAAAG,WAAA,IACA,IAAAH,MAAAG,WAAA,EACA,OAAAD,IAGAzG,SACA2G,YADA,SACArI,GAAA,IAAA4B,EAAArB,KACMsB,EAAA,EAANyG,sBAAA,EAAAtI,GACA+B,KAAA,SAAAC,GAEA,MADAA,EAAAnC,KACAoC,OACAL,EAAAiF,aAAA,IACAjF,EAAAkF,wBAIAyB,eAXA,SAWAvI,GAAA,IAAAqC,EAAA9B,KACMsB,EAAA,EAANyG,sBAAA,EAAAtI,GACA+B,KAAA,SAAAC,GAEA,MADAA,EAAAnC,KACAoC,OACAI,EAAAwE,aAAA,IACAxE,EAAAyE,wBAIA0B,WArBA,WAsBAjI,KAAAkI,MAAA,iBAKAC,WA3BA,WA4BAnI,KAAAY,QAAAC,IAAA,IAMAuH,WAlCA,SAkCAC,GAEA,IAAAhC,EAAArG,KAAAsI,IAAAC,UAEAvI,KAAAmH,SAYAnH,KAAAkG,OAFAG,GAAA,IAEArG,KAAAwD,WAEAxD,KAAAmD,MAGAkD,GAAA,KACArG,KAAAoG,WAAA,EACApG,KAAAqG,IAAA,WAEArG,KAAAoG,WAAA,EACApG,KAAAqG,IAAA,WArBAA,GAAA,KACArG,KAAAoG,WAAA,EACApG,KAAAqG,IAAA,WAEArG,KAAAoG,WAAA,EACApG,KAAAqG,IAAA,aCnUemC,GADE5F,OAFjB,WAA0B,IAAAC,EAAA7C,KAAa8C,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByF,YAAA,UAAAhE,IAA0BiE,OAAA7F,EAAAuF,cAAyBpF,EAAA,OAAYyF,YAAA,gBAAA9B,OAAoCI,OAAAlE,EAAAkE,UAAqBlE,EAAAsE,QAAqNtE,EAAA8F,KAArN3F,EAAA,cAAkCyF,YAAA,aAAAhE,IAA6B0D,WAAAtF,EAAAsF,cAA6BnF,EAAA,QAAa4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,MAAAjG,EAAA,UAAAkG,WAAA,cAA0EN,YAAA,SAAqB5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAqD,aAAArD,EAAAmG,GAAA,KAAAnG,EAAA,QAAAG,EAAA,cAAqFyF,YAAA,aAAAhE,IAA6B0D,WAAAtF,EAAAsF,cAA6BnF,EAAA,QAAayF,YAAA,SAAmB5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAqD,aAAArD,EAAA8F,KAAA9F,EAAAmG,GAAA,KAAAnG,EAAAsE,QAAgTtE,EAAA8F,KAAhT3F,EAAA,OAA+EyF,YAAA,SAAmBzF,EAAA,OAAYyF,YAAA,SAAmBzF,EAAA,QAAayF,YAAA,QAAkB5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAA4E,QAAA5E,EAAAmG,GAAA,KAAAhG,EAAA,QAAmDyF,YAAA,UAAoB5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAA+E,YAAA/E,EAAAmG,GAAA,KAAAhG,EAAA,OAAsDyF,YAAA,SAAmB5F,EAAAmG,GAAA,kBAAAnG,EAAAmG,GAAA,KAAAnG,EAAA,QAAAG,EAAA,OAAwEyF,YAAA,oBAA8BzF,EAAA,OAAYyF,YAAA,aAAuBzF,EAAA,OAAYyF,YAAA,aAAuBzF,EAAA,OAAY4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,MAAAjG,EAAAO,OAAA,iBAAA2F,WAAA,8BAA0G7F,OAASgG,IAAA,MAAUrG,EAAAmG,GAAA,KAAAhG,EAAA,QAAyByF,YAAA,eAAyBzF,EAAA,KAAUyF,YAAA,qBAA+B5F,EAAAmG,GAAA,iBAAAnG,EAAAoG,GAAApG,EAAAsG,GAAA,UAAAtG,GAAA2B,YAAA,oBAAA3B,EAAAmG,GAAA,KAAAhG,EAAA,OAA6GyF,YAAA,aAAuBzF,EAAA,KAAUyF,YAAA,gBAA0B5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAsD,gBAAAtD,EAAAmG,GAAA,KAAAhG,EAAA,OAA0DyF,YAAA,YAAsBzF,EAAA,OAAYyF,YAAA,aAAuBzF,EAAA,OAAY4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,MAAAjG,EAAAY,cAAA,iBAAAsF,WAAA,qCAAwH7F,OAASgG,IAAA,QAAUrG,EAAAmG,GAAA,KAAAhG,EAAA,QAAAH,EAAAmG,GAAA,mBAAAnG,EAAAoG,GAAApG,EAAAgB,QAAA,oBAAAb,EAAA,KAAoGyF,YAAA,mCAAyC5F,EAAAmG,GAAA,KAAAhG,EAAA,OAA4ByF,YAAA,iBAA2BzF,EAAA,QAAayF,YAAA,SAAmB5F,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAkB,gBAAAlB,EAAAmG,GAAA,KAAAhG,EAAA,KAAwDyF,YAAA,qCAAyC5F,EAAAmG,GAAA,KAAAhG,EAAA,OAA8ByF,YAAA,UAAoBzF,EAAA,OAAYyF,YAAA,aAAuBzF,EAAA,KAAUyF,YAAA,sBAAgC5F,EAAAmG,GAAA,KAAAhG,EAAA,QAAAH,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAsG,GAAA,SAAAtG,GAAAmB,oBAAAnB,EAAAmG,GAAA,KAAAhG,EAAA,OAAsGyF,YAAA,aAAuBzF,EAAA,KAAUyF,YAAA,uBAAiC5F,EAAAmG,GAAA,KAAAhG,EAAA,QAAAH,EAAAmG,GAAAnG,EAAAoG,GAAApG,EAAAsG,GAAA,WAAAtG,GAAAqB,kBAAArB,EAAAmG,GAAA,KAAAnG,EAAAuG,GAAA,GAAAvG,EAAAmG,GAAA,KAAAnG,EAAAuG,GAAA,OAAAvG,EAAA8F,MAAA,GAAA9F,EAAAmG,GAAA,KAAAhG,EAAA,OAAmKyF,YAAA,aAAAY,OAAgCjD,UAAAvD,EAAAuD,aAA0BpD,EAAA,QAAAA,EAAA,QAAwByB,IAAI6E,MAAAzG,EAAAoF,cAAwBjF,EAAA,KAAUyF,YAAA,sBAAgC5F,EAAAmG,GAAA,4BAAAnG,EAAAmG,GAAA,KAAAnG,EAAA,QAAAG,EAAA,QAA0EyF,YAAA,UAAoB5F,EAAAmG,GAAA,KAAAnG,EAAAoG,GAAApG,EAAAsB,YAAA,QAAAtB,EAAA8F,OAAA9F,EAAAmG,GAAA,KAAAnG,EAAAsE,QAAqItE,EAAA8F,KAArI3F,EAAA,QAAAA,EAAA,KAAsGyF,YAAA,qBAA+B5F,EAAAmG,GAAA,sBAAAnG,EAAAmG,GAAA,KAAAnG,EAAA,QAAAG,EAAA,OAA4EuG,IAAA,aAAAd,YAAA,aAAAY,OAAiDG,IAAA3G,EAAAyD,eAA0BtD,EAAA,QAAa4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,OAAAjG,EAAAyD,YAAAyC,WAAA,iBAAgFtE,IAAM6E,MAAA,SAAAjE,GAAyB,OAAAxC,EAAAiF,YAAAjF,EAAApD,YAAqCoD,EAAAmG,GAAA,QAAAnG,EAAAoG,GAAApG,EAAAsG,GAAA,SAAAtG,GAAA0D,sBAAA,OAAA1D,EAAAmG,GAAA,KAAAhG,EAAA,QAAiG4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,MAAAjG,EAAA,YAAAkG,WAAA,gBAA8EtE,IAAM6E,MAAA,SAAAjE,GAAyB,OAAAxC,EAAAmF,eAAAnF,EAAApD,YAAwCuD,EAAA,KAAUyF,YAAA,yBAAmC5F,EAAAmG,GAAA,aAAAnG,EAAAoG,GAAApG,EAAAsG,GAAA,SAAAtG,GAAA0D,sBAAA,gBAAA1D,EAAA8F,OAAA9F,EAAAmG,GAAA,KAAAhG,EAAA,OAAyH4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,OAAAjG,EAAArD,KAAAuJ,WAAA,UAAkEN,YAAA,YAAA9B,OAAkC8C,UAAA5G,EAAAwD,OAAsBxD,EAAA6G,GAAA,eAAA7G,EAAAmG,GAAA,KAAAhG,EAAA,gBAAuD4F,aAAavJ,KAAA,OAAAwJ,QAAA,SAAAC,MAAAjG,EAAA,KAAAkG,WAAA,YAAkE,IAEt2HzD,iBADjB,WAAoC,IAAaxC,EAAb9C,KAAa+C,eAA0BC,EAAvChD,KAAuCiD,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByF,YAAA,aAAuBzF,EAAA,KAAUyF,YAAA,qBAAjHzI,KAAgJgJ,GAAA,KAAAhG,EAAA,QAAhJhD,KAAgJgJ,GAAA,WAA0C,WAAc,IAAalG,EAAb9C,KAAa+C,eAA0BC,EAAvChD,KAAuCiD,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByF,YAAA,aAAuBzF,EAAA,KAAUyF,YAAA,2BAAjHzI,KAAsJgJ,GAAA,KAAAhG,EAAA,QAAtJhD,KAAsJgJ,GAAA,aCElY,IAcAzD,EAdyBC,EAAQ,OAcjCC,CACE9F,EACA6I,GATF,EAVA,SAAA9C,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,EAAAJ,EAAiB","file":"static/js/16.04176c059c1825e25d63.js","sourcesContent":["<!--\r\n * @Author: 张健龙\r\n * @Begin: 2019-09-06 11:47:11\r\n * @Update: 2019-10-09 11:47:44\r\n * @Update log: 这个是歌单展示的通用组件\r\n -->\r\n<template>\r\n  <!-- 通过传递参数给子组件，标题，加载样式，图片链接，歌单名称，作者头像，作者昵称，歌单介绍，评论数，分享数，歌单歌曲数，收藏数，是否收藏 -->\r\n  <song-list-page\r\n    title=\"歌单\"\r\n    :load=\"load\"\r\n    :imgUrl=\"albumInfo.coverImgUrl ? albumInfo.coverImgUrl : albumInfo.album ? albumInfo.album.picUrl : ''\"\r\n    :albumTitle=\"albumInfo.name ? albumInfo.name : albumInfo.album ? albumInfo.album.name : ''\"\r\n    :listId=\"listId\"\r\n    :creatorImgUrl=\"albumInfo.creator ? albumInfo.creator.avatarUrl : albumInfo.album ? albumInfo.album.artist.picUrl:''\"\r\n    :author=\"albumInfo.creator ? albumInfo.creator.nickname : albumInfo.album ? albumInfo.album.artist.name : ''\"\r\n    :description=\"albumInfo.description ? albumInfo.description : albumInfo.album ? albumInfo.album.description : ''\"\r\n    :commentCount=\"albumInfo.commentCount ? albumInfo.commentCount : albumInfo.album ? albumInfo.album.info.commentCount : 0\"\r\n    :shareCount=\"albumInfo.shareCount ? albumInfo.shareCount : albumInfo.album ? albumInfo.album.info.shareCount : 0\"\r\n    :trackCount=\"albumInfo.trackCount ? albumInfo.trackCount : albumInfo.album ? albumInfo.album.size : 0\"\r\n    :subscribedCount=\"albumInfo.subscribedCount\"\r\n    :subscribed=\"albumInfo.subscribed\"\r\n    :isSubIn=\"albumInfo.subscribed\"\r\n    :playCount=\"albumInfo.playCount\"\r\n    @startPlayAll=\"startPlay\"\r\n  >\r\n    <!-- 这是一个通用的用来展示歌曲列表的组件，通过for循环组件进行渲染  这里使用 index+1 展示了页面的索引值 -->\r\n    <song-list\r\n      v-for=\"(item, index) in albumInfo.tracks || albumInfo.songs\"\r\n      :key=\"index\"\r\n      :songName=\"item.name\"\r\n      :artists=\"item.ar\"\r\n      :albumName=\"item.al.name\"\r\n      :num=\"index + 1\"\r\n      @beginSong=\"setAudioList(item, index)\"\r\n      :nowSong=\"item.id === audioSong.id\"\r\n    ></song-list>\r\n  </song-list-page>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport songList from 'base/song'\r\nimport songListPage from 'base/songListPage'\r\nimport api from 'api'\r\n\r\nexport default {\r\n  name: '',\r\n  data () {\r\n    return {\r\n      // 存储信息的数组\r\n      albumInfo: [],\r\n      // 用来定义是否显示load加载组件\r\n      load: true,\r\n      listId: 0\r\n    }\r\n  },\r\n  components: {\r\n    songListPage,\r\n    songList\r\n  },\r\n  /**\r\n   * 生命钩子函数在实例创建完成后被立即调用\r\n   */\r\n  created () {\r\n    // if (this.albumInfo) {\r\n    //   this.$router.go(-1)\r\n    // }\r\n  },\r\n  activated () {\r\n    this.load = true\r\n    let albumId = this.$route.params.albumId\r\n    let idxId = this.$route.params.idxId\r\n    let dishId = this.$route.params.dishId\r\n    console.log(this.$route.params)\r\n    this.listId = +albumId\r\n    if (albumId) {\r\n      this._getInfo(albumId)\r\n      return\r\n    }\r\n    if (idxId) {\r\n      this._getIdxInfo(idxId)\r\n      return\r\n    }\r\n    if (dishId) {\r\n      this._getDishInfo(dishId)\r\n      return\r\n    }\r\n    // !Number(0) === true\r\n    if (Number(albumId) !== 0) {\r\n      if (!Number(albumId)) {\r\n        this.$router.go(-1)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({ audioSong: 'AUDIO_ING_SONG' })\r\n  },\r\n  methods: {\r\n    /**\r\n     * 根据传入的id获取歌单信息\r\n     *\r\n     * 这里需要增加 catch 方法！！！\r\n     */\r\n    _getInfo (id) {\r\n      // 这里使用的是定义的接口信息，详情查看 api 文件夹\r\n      api.albumDetailFn(id)\r\n        // 请求成功后返回数据\r\n        .then(res => {\r\n          // 接受数据\r\n          const data = res.data\r\n          // 查看返回数据的 code 状态，如果是 200 的话进行使用\r\n          if (data.code === 200) {\r\n            // 将请求回来的数据使用，将load 样式关闭\r\n            this.albumInfo = data.playlist\r\n            this.load = false\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /**\r\n     * 获取排行榜信息\r\n     */\r\n    _getIdxInfo (id) {\r\n      api.idxListFn(id)\r\n        .then(res => {\r\n          const data = res.data\r\n          if (data.code === 200) {\r\n            this.albumInfo = data.playlist\r\n            this.load = false\r\n          }\r\n        })\r\n    },\r\n    /**\r\n     * 获取专辑内容\r\n     */\r\n    _getDishInfo (id) {\r\n      api.getDishInfoFn(id)\r\n        .then(res => {\r\n          const data = res.data\r\n          if (data.code === 200) {\r\n            this.albumInfo = data\r\n            this.load = false\r\n          }\r\n        })\r\n    },\r\n    setAudioList (item, index) {\r\n      console.log('111', item)\r\n      this.selectPlay({\r\n        list: this.albumInfo.tracks,\r\n        index\r\n      })\r\n    },\r\n    startPlay () {\r\n      this.startPlayAll({\r\n        list: this.albumInfo.tracks\r\n      })\r\n    },\r\n    ...mapActions(['selectPlay', 'startPlayAll'])\r\n  },\r\n  destroyed () {\r\n    // 存储信息的数组\r\n    this.albumInfo = []\r\n    // 用来定义是否显示load加载组件\r\n    this.load = true\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/base/albumPage/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('song-list-page',{attrs:{\"title\":\"歌单\",\"load\":_vm.load,\"imgUrl\":_vm.albumInfo.coverImgUrl ? _vm.albumInfo.coverImgUrl : _vm.albumInfo.album ? _vm.albumInfo.album.picUrl : '',\"albumTitle\":_vm.albumInfo.name ? _vm.albumInfo.name : _vm.albumInfo.album ? _vm.albumInfo.album.name : '',\"listId\":_vm.listId,\"creatorImgUrl\":_vm.albumInfo.creator ? _vm.albumInfo.creator.avatarUrl : _vm.albumInfo.album ? _vm.albumInfo.album.artist.picUrl:'',\"author\":_vm.albumInfo.creator ? _vm.albumInfo.creator.nickname : _vm.albumInfo.album ? _vm.albumInfo.album.artist.name : '',\"description\":_vm.albumInfo.description ? _vm.albumInfo.description : _vm.albumInfo.album ? _vm.albumInfo.album.description : '',\"commentCount\":_vm.albumInfo.commentCount ? _vm.albumInfo.commentCount : _vm.albumInfo.album ? _vm.albumInfo.album.info.commentCount : 0,\"shareCount\":_vm.albumInfo.shareCount ? _vm.albumInfo.shareCount : _vm.albumInfo.album ? _vm.albumInfo.album.info.shareCount : 0,\"trackCount\":_vm.albumInfo.trackCount ? _vm.albumInfo.trackCount : _vm.albumInfo.album ? _vm.albumInfo.album.size : 0,\"subscribedCount\":_vm.albumInfo.subscribedCount,\"subscribed\":_vm.albumInfo.subscribed,\"isSubIn\":_vm.albumInfo.subscribed,\"playCount\":_vm.albumInfo.playCount},on:{\"startPlayAll\":_vm.startPlay}},_vm._l((_vm.albumInfo.tracks || _vm.albumInfo.songs),function(item,index){return _c('song-list',{key:index,attrs:{\"songName\":item.name,\"artists\":item.ar,\"albumName\":item.al.name,\"num\":index + 1,\"nowSong\":item.id === _vm.audioSong.id},on:{\"beginSong\":function($event){return _vm.setAudioList(item, index)}}})}),1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fbbe6998\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/base/albumPage/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fbbe6998\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fbbe6998\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fbbe6998\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base/albumPage/index.vue\n// module id = null\n// module chunks = ","<!--\r\n * @Author: 张健龙\r\n * @Begin: 2019-09-06 11:33:42\r\n * @Update: 2019-10-10 08:32:02\r\n * @Update log: 这是一个用来展示歌曲列表的基础组件\r\n -->\r\n<template>\r\n  <!-- 页面需要监听滚动事件，滚动到某个位置时标题栏要固定 -->\r\n  <!-- 这里需要增加动态的改变样式信息，不是只有显示隐藏！！！！！！！！！ -->\r\n  <div class=\"wrapper\" @scroll=\"scrollList\">\r\n    <!-- 由于歌单页和今日推荐页面的顶部展示区域高度不同，所以通过动态的 height 进行设置 -->\r\n    <div class=\"container-top\" :style=\"{height}\">\r\n      <!-- 通过传值 isAlbum 的布尔值进行判断，因为在今日推荐页面的页面标题是通过滚动显示隐藏的 -->\r\n      <global-nav class=\"fixed pd23\" v-if=\"!isAlbum\" @returnPage=\"returnPage\">\r\n        <!-- 通过改变 listFixed 来控制 title 的显示与否-->\r\n        <span class=\"text\" v-show=\"listFixed\">{{iTitle}}</span>\r\n      </global-nav>\r\n      <!-- 这里是在歌单页面时，页面标题是一直显示的 -->\r\n      <global-nav class=\"fixed pd23\" v-if=\"isAlbum\" @returnPage=\"returnPage\">\r\n        <span class=\"text\">{{iTitle}}</span>\r\n      </global-nav>\r\n      <!-- 这里包裹的是每日推荐页面额外显示的日期信息 -->\r\n      <div class=\"pd23\" v-if=\"!isAlbum\">\r\n        <div class=\"date\">\r\n          <span class=\"day\">{{day}}</span>\r\n          <span class=\"month\">{{month}}</span>\r\n        </div>\r\n        <div class=\"info\">查收属于您的今日推荐</div>\r\n      </div>\r\n      <!-- 这里包裹的是歌单页面的图片，作者，介绍等信息 -->\r\n      <div class=\"album-info pd23\" v-if=\"isAlbum\">\r\n        <div class=\"info-top\">\r\n          <div class=\"img-info\">\r\n            <img v-lazy=\"imgUrl + '?param=200y200'\" alt />\r\n            <span class=\"play-count\">\r\n              <i class=\"date-song bofang\"></i>\r\n              {{playCount | setPlay}}\r\n            </span>\r\n          </div>\r\n          <div class=\"info-con\">\r\n            <p class=\"album-title\">{{iAlbumTitle}}</p>\r\n            <div class=\"creator\">\r\n              <div class=\"img-info\">\r\n                <img v-lazy=\"creatorImgUrl + '?param=200y200'\" alt />\r\n              </div>\r\n              <span>\r\n                {{author}}\r\n                <i class=\"date-song iconfontjiantou5\"></i>\r\n              </span>\r\n            </div>\r\n            <div class=\"desc-wrapper\">\r\n              <span class=\"desc\">{{description}}</span>\r\n              <i class=\"date-song iconfontjiantou5\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"icons\">\r\n          <div class=\"comments\">\r\n            <i class=\"date-song pinglun\"></i>\r\n            <span>{{commentCount | setCom}}</span>\r\n          </div>\r\n          <div class=\"comments\">\r\n            <i class=\"date-song fenxiang\"></i>\r\n            <span>{{shareCount | setShare}}</span>\r\n          </div>\r\n          <div class=\"comments\">\r\n            <i class=\"date-song xiazai\"></i>\r\n            <span>下载</span>\r\n          </div>\r\n          <div class=\"comments\">\r\n            <i class=\"date-song duoxuankuang\"></i>\r\n            <span>多选</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 这里是 播放全部 那一行的信息，因为要操作是否固定，所以需要单独设置 -->\r\n    <div class=\"title pd23\" :class=\"{listFixed}\">\r\n      <span>\r\n        <span @click=\"beginAudio\">\r\n          <i class=\"date-song cbofang\"></i>\r\n          播放全部\r\n        </span>\r\n        <!-- 当歌单组件时，需要显示当前歌单总共有多少首歌曲的信息 -->\r\n        <span class=\"count\" v-if=\"isAlbum\">(共{{trackCount}}首)</span>\r\n      </span>\r\n      <!-- 当在每日推荐界面时，这里显示的是一个多选按钮 -->\r\n      <!-- 这里的多选需要设置一个多选页面的组件！！！！！！！！！ -->\r\n      <span v-if=\"!isAlbum\">\r\n        <i class=\"date-song caidan\"></i>\r\n        多选\r\n      </span>\r\n      <!-- 当时歌单组件时有收藏歌单的按钮选项 -->\r\n      <!-- 这里需要添加判断用户是否已经收藏歌单！！！！来显示不同的样式 -->\r\n      <div class=\"collection\" :class=\"{ 'bg': !isSubInItem }\" ref=\"collection\" v-if=\"isAlbum\">\r\n        <span\r\n          v-show=\"!isSubInItem\"\r\n          @click=\"addPlaylist(listId)\"\r\n        >+ 收藏({{subscribedCountItem | setCol}})</span>\r\n        <span v-show=\"isSubInItem\" @click=\"deletePlaylist(listId)\">\r\n          <i class=\"date-song wenjianjia\"></i>\r\n          {{subscribedCountItem | setCol}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <!-- 这里将列表进行包裹统一的通过 load 属性进行判断是否展示 -->\r\n    <div class=\"list-info\" v-show=\"!load\" :style=\"{ marginTop: top}\">\r\n      <slot></slot>\r\n    </div>\r\n    <!-- 页面 loading 组件 -->\r\n    <page-loading v-show=\"load\"></page-loading>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport globalNav from 'base/generalNav'\r\nimport pageLoading from 'base/pageLoading'\r\nimport api from 'api'\r\n\r\nconst setNum = function (val) {\r\n  if (!val) {\r\n    return ''\r\n  }\r\n  if (val > 100000000) {\r\n    val = ((val / 100000000).toFixed(1)) + '亿'\r\n  } else if (val > 10000) {\r\n    val = ((val / 10000).toFixed(1)) + '万'\r\n  }\r\n  return val\r\n}\r\n\r\nexport default {\r\n  name: '',\r\n  components: {\r\n    globalNav,\r\n    pageLoading\r\n  },\r\n  /**\r\n   * 这里使用 data 把 props 接收的值进行存储，因为 vue 不允许子组件直接修改父组件传过来的值\r\n   */\r\n  data () {\r\n    return {\r\n      iTitle: this.title,\r\n      iAlbumTitle: this.albumTitle,\r\n      listFixed: false,\r\n      top: '0.5rem',\r\n      isSubInItem: false,\r\n      subscribedCountItem: 0\r\n    }\r\n  },\r\n  /**\r\n   * 当已经加载了一次页面后，再次进入页面时标题信息不能更新\r\n   *\r\n   * 这里需要监听 props 的改变，如果改变了将新值接受进行改变\r\n   */\r\n  watch: {\r\n    title: function (val) {\r\n      this.iTitle = val\r\n    },\r\n    albumTitle: function (val) {\r\n      this.iAlbumTitle = val\r\n    },\r\n    subscribedCount: function (val) {\r\n      this.subscribedCountItem = val\r\n      if (val === 0 || !val) {\r\n        this.$refs.collection.style.display = 'none'\r\n      } else {\r\n        this.$refs.collection.style.display = ''\r\n      }\r\n    },\r\n    isSubIn: function (val) {\r\n      this.isSubInItem = val\r\n    }\r\n  },\r\n  /**\r\n   * 所有的 props 值信息\r\n   */\r\n  props: {\r\n    listId: {\r\n      type: Number\r\n    },\r\n    playCount: {\r\n      type: Number\r\n    },\r\n    height: {\r\n      // 顶部展示区域高度\r\n      type: String,\r\n      default: '6rem'\r\n    },\r\n    subscribedCount: {\r\n      type: Number\r\n    },\r\n    subscribed: {\r\n      type: Boolean\r\n    },\r\n    trackCount: {\r\n      type: Number\r\n    },\r\n    shareCount: {\r\n      type: Number\r\n    },\r\n    commentCount: {\r\n      type: Number\r\n    },\r\n    description: {\r\n      type: String\r\n    },\r\n    author: {\r\n      type: String\r\n    },\r\n    creatorImgUrl: {\r\n      type: String\r\n    },\r\n    albumTitle: {\r\n      type: String\r\n    },\r\n    imgUrl: {\r\n      type: String\r\n    },\r\n    title: {\r\n      type: String\r\n    },\r\n    isAlbum: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    load: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    isSubIn: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  filters: {\r\n    setCom: function (val) {\r\n      if (!val) {\r\n        return '评论'\r\n      }\r\n      return setNum(val)\r\n    },\r\n    setShare: function (val) {\r\n      if (!val) {\r\n        return '分享'\r\n      }\r\n      return setNum(val)\r\n    },\r\n    setCol: function (val) {\r\n      if (!val) {\r\n        return ''\r\n      }\r\n      return setNum(val)\r\n    },\r\n    setPlay: function (val) {\r\n      if (!val) {\r\n        return ''\r\n      }\r\n      return setNum(val)\r\n    }\r\n  },\r\n  // 对日期信息提取展示\r\n  computed: {\r\n    /**\r\n     * 返回日\r\n     */\r\n    day: function () {\r\n      const day = new Date().getDate() < 10\r\n        ? '0' + new Date().getDate()\r\n        : new Date().getDate()\r\n      return day\r\n    },\r\n    /**\r\n     * 返回月份\r\n     */\r\n    month: function () {\r\n      const month = new Date().getMonth() + 1 < 10\r\n        ? '0' + (new Date().getMonth() + 1)\r\n        : new Date().getMonth() + 1\r\n      return month\r\n    }\r\n  },\r\n  methods: {\r\n    addPlaylist (listId) {\r\n      api.addOrDeletePlaylistFn(1, listId)\r\n        .then(res => {\r\n          const data = res.data\r\n          if (data.code === 200) {\r\n            this.isSubInItem = true\r\n            ++this.subscribedCountItem\r\n          }\r\n        })\r\n    },\r\n    deletePlaylist (listId) {\r\n      api.addOrDeletePlaylistFn(2, listId)\r\n        .then(res => {\r\n          const data = res.data\r\n          if (data.code === 200) {\r\n            this.isSubInItem = false\r\n            --this.subscribedCountItem\r\n          }\r\n        })\r\n    },\r\n    beginAudio () {\r\n      this.$emit('startPlayAll')\r\n    },\r\n    /**\r\n     * 返回上一页\r\n     */\r\n    returnPage () {\r\n      this.$router.go(-1)\r\n    },\r\n    /**\r\n     * 定义页面滚动事件，\r\n     * 这里需要添加在滚动过程中样式的变化\r\n     */\r\n    scrollList (e) {\r\n      // 获取到 top 值\r\n      let top = this.$el.scrollTop\r\n      // 当当前组件不是歌单组件时，就是每日推荐页面\r\n      if (!this.isAlbum) {\r\n        if (top >= 148) {\r\n          this.listFixed = true\r\n          this.top = '1.3rem'\r\n        } else {\r\n          this.listFixed = false\r\n          this.top = '0.5rem'\r\n        }\r\n      } else {\r\n        // 当是歌单组件时，当页面滚动到一定位置的时候顶部的标题会变\r\n        if (top >= 148) {\r\n          // 这里使用data存下了props的值进行修改，子组件不能直接修改props传过来的值\r\n          this.iTitle = this.albumTitle\r\n        } else {\r\n          this.iTitle = this.title\r\n        }\r\n        // 当 top 到了 250 的时候会改变标题行的是否固定样式\r\n        if (top >= 250) {\r\n          this.listFixed = true\r\n          this.top = '1.3rem'\r\n        } else {\r\n          this.listFixed = false\r\n          this.top = '0.5rem'\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n@import url(\"//at.alicdn.com/t/font_1394963_t6jt71rtm9.css\");\r\n@import url(\"~styles/global.less\");\r\n.topFixed {\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 0.8rem;\r\n  background-color: #ee5253;\r\n  z-index: 9;\r\n}\r\n@textColor: #ccc;\r\n.fixed {\r\n  .topFixed();\r\n  top: 0;\r\n}\r\n.listFixed {\r\n  .topFixed();\r\n  top: 0.8rem;\r\n}\r\n\r\n.wrapper {\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: scroll;\r\n  // 组件的title\r\n  .title {\r\n    font-size: 0.3rem;\r\n    height: 0.8rem;\r\n    line-height: 0.8rem;\r\n    .flex-between();\r\n    background-color: #fff;\r\n    .count {\r\n      color: #999;\r\n      font-size: small;\r\n    }\r\n    .collection {\r\n      .pd23();\r\n      font-size: smaller;\r\n      margin-top: 3px;\r\n      height: 0.7rem;\r\n      line-height: 0.7rem;\r\n      border-radius: 0.4rem;\r\n      color: #999;\r\n      &.bg {\r\n        background-color: @bgcolor;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  .container-top {\r\n    width: 100%;\r\n    color: #fff;\r\n    background-color: #ee5253;\r\n    .date {\r\n      padding-top: 1.5rem;\r\n      .day {\r\n        font-size: 0.7rem;\r\n      }\r\n      .month {\r\n        font-size: 0.4rem;\r\n        color: #c8d6e5;\r\n        &::before {\r\n          content: \"/\";\r\n        }\r\n      }\r\n    }\r\n    .info {\r\n      margin-top: 0.7rem;\r\n    }\r\n    .text {\r\n      font-size: 0.4rem;\r\n      vertical-align: 5px;\r\n      width: 8rem;\r\n      .ellipsis();\r\n    }\r\n    .album-info {\r\n      padding-top: 1.5rem;\r\n      .info-top {\r\n        height: 3rem;\r\n        .flex-between();\r\n        overflow: hidden;\r\n        .img-info {\r\n          @size: 2.6rem;\r\n          width: @size;\r\n          height: 0;\r\n          position: relative;\r\n          padding-bottom: @size;\r\n          border-radius: @imgBorderRadius;\r\n          overflow: hidden;\r\n          img {\r\n            width: @size;\r\n            height: @size;\r\n          }\r\n          .play-count {\r\n            position: absolute;\r\n            top: 0.1rem;\r\n            right: 0.1rem;\r\n            .bofang {\r\n              font-size: 0.24rem;\r\n            }\r\n          }\r\n        }\r\n        .info-con {\r\n          width: 3.6rem;\r\n          height: 2.6rem;\r\n          display: flex;\r\n          flex-direction: column;\r\n          overflow: hidden;\r\n          .album-title {\r\n            font-size: 0.36rem;\r\n            line-height: 1.5;\r\n            .twoLinesEllipsis();\r\n          }\r\n          .creator {\r\n            height: 1rem;\r\n            color: @textColor;\r\n            display: flex;\r\n            align-items: center;\r\n            .img-info {\r\n              @size: 0.6rem;\r\n              width: @size;\r\n              height: 0;\r\n              padding-bottom: @size;\r\n              margin-right: 8px;\r\n              border-radius: 50%;\r\n              overflow: hidden;\r\n              img {\r\n                width: @size;\r\n                height: @size;\r\n              }\r\n            }\r\n          }\r\n          .desc-wrapper {\r\n            display: flex;\r\n            align-items: center;\r\n            color: @textColor;\r\n            .desc {\r\n              width: 3rem;\r\n              .twoLinesEllipsis();\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .icons {\r\n        margin-top: 8px;\r\n        .flex-around();\r\n        width: 100%;\r\n        .comments {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          flex-direction: column;\r\n          .date-song {\r\n            font-size: 0.4rem;\r\n            margin-bottom: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .list-info {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0.1rem 0.23rem;\r\n    background-color: #fff;\r\n    transform: translate3d(0, -0.5rem, 0);\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/base/songListPage/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\",on:{\"scroll\":_vm.scrollList}},[_c('div',{staticClass:\"container-top\",style:({height: _vm.height})},[(!_vm.isAlbum)?_c('global-nav',{staticClass:\"fixed pd23\",on:{\"returnPage\":_vm.returnPage}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.listFixed),expression:\"listFixed\"}],staticClass:\"text\"},[_vm._v(_vm._s(_vm.iTitle))])]):_vm._e(),_vm._v(\" \"),(_vm.isAlbum)?_c('global-nav',{staticClass:\"fixed pd23\",on:{\"returnPage\":_vm.returnPage}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.iTitle))])]):_vm._e(),_vm._v(\" \"),(!_vm.isAlbum)?_c('div',{staticClass:\"pd23\"},[_c('div',{staticClass:\"date\"},[_c('span',{staticClass:\"day\"},[_vm._v(_vm._s(_vm.day))]),_vm._v(\" \"),_c('span',{staticClass:\"month\"},[_vm._v(_vm._s(_vm.month))])]),_vm._v(\" \"),_c('div',{staticClass:\"info\"},[_vm._v(\"查收属于您的今日推荐\")])]):_vm._e(),_vm._v(\" \"),(_vm.isAlbum)?_c('div',{staticClass:\"album-info pd23\"},[_c('div',{staticClass:\"info-top\"},[_c('div',{staticClass:\"img-info\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.imgUrl + '?param=200y200'),expression:\"imgUrl + '?param=200y200'\"}],attrs:{\"alt\":\"\"}}),_vm._v(\" \"),_c('span',{staticClass:\"play-count\"},[_c('i',{staticClass:\"date-song bofang\"}),_vm._v(\"\\n            \"+_vm._s(_vm._f(\"setPlay\")(_vm.playCount))+\"\\n          \")])]),_vm._v(\" \"),_c('div',{staticClass:\"info-con\"},[_c('p',{staticClass:\"album-title\"},[_vm._v(_vm._s(_vm.iAlbumTitle))]),_vm._v(\" \"),_c('div',{staticClass:\"creator\"},[_c('div',{staticClass:\"img-info\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.creatorImgUrl + '?param=200y200'),expression:\"creatorImgUrl + '?param=200y200'\"}],attrs:{\"alt\":\"\"}})]),_vm._v(\" \"),_c('span',[_vm._v(\"\\n              \"+_vm._s(_vm.author)+\"\\n              \"),_c('i',{staticClass:\"date-song iconfontjiantou5\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"desc-wrapper\"},[_c('span',{staticClass:\"desc\"},[_vm._v(_vm._s(_vm.description))]),_vm._v(\" \"),_c('i',{staticClass:\"date-song iconfontjiantou5\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"icons\"},[_c('div',{staticClass:\"comments\"},[_c('i',{staticClass:\"date-song pinglun\"}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm._f(\"setCom\")(_vm.commentCount)))])]),_vm._v(\" \"),_c('div',{staticClass:\"comments\"},[_c('i',{staticClass:\"date-song fenxiang\"}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm._f(\"setShare\")(_vm.shareCount)))])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1)])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"title pd23\",class:{listFixed: _vm.listFixed}},[_c('span',[_c('span',{on:{\"click\":_vm.beginAudio}},[_c('i',{staticClass:\"date-song cbofang\"}),_vm._v(\"\\n        播放全部\\n      \")]),_vm._v(\" \"),(_vm.isAlbum)?_c('span',{staticClass:\"count\"},[_vm._v(\"(共\"+_vm._s(_vm.trackCount)+\"首)\")]):_vm._e()]),_vm._v(\" \"),(!_vm.isAlbum)?_c('span',[_c('i',{staticClass:\"date-song caidan\"}),_vm._v(\"\\n      多选\\n    \")]):_vm._e(),_vm._v(\" \"),(_vm.isAlbum)?_c('div',{ref:\"collection\",staticClass:\"collection\",class:{ 'bg': !_vm.isSubInItem }},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isSubInItem),expression:\"!isSubInItem\"}],on:{\"click\":function($event){return _vm.addPlaylist(_vm.listId)}}},[_vm._v(\"+ 收藏(\"+_vm._s(_vm._f(\"setCol\")(_vm.subscribedCountItem))+\")\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isSubInItem),expression:\"isSubInItem\"}],on:{\"click\":function($event){return _vm.deletePlaylist(_vm.listId)}}},[_c('i',{staticClass:\"date-song wenjianjia\"}),_vm._v(\"\\n        \"+_vm._s(_vm._f(\"setCol\")(_vm.subscribedCountItem))+\"\\n      \")])]):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.load),expression:\"!load\"}],staticClass:\"list-info\",style:({ marginTop: _vm.top})},[_vm._t(\"default\")],2),_vm._v(\" \"),_c('page-loading',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.load),expression:\"load\"}]})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"comments\"},[_c('i',{staticClass:\"date-song xiazai\"}),_vm._v(\" \"),_c('span',[_vm._v(\"下载\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"comments\"},[_c('i',{staticClass:\"date-song duoxuankuang\"}),_vm._v(\" \"),_c('span',[_vm._v(\"多选\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-23b23c12\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/base/songListPage/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-23b23c12\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-23b23c12\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-23b23c12\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base/songListPage/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}